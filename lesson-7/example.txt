componentDidMount() {    
	fetch("https://jsonplaceholder.typicode.com/posts/1")
    .then((response) => response.json())
    .then((data) => {
      // Uppdatera state med den hämtade datan
        this.setState({ data: data });
    })
    .catch((error) => {
      console.error("Error fetching data:", error);
    });
}

componentDidUpdate(prevProps) {
  if (prevProps.userId !== this.props.userId) {
    // Uppdatera användarinformation baserat på den nya användar-ID:n
    this.fetchUserData(this.props.userId);
  }
}

componentWillUnmount() {
  console.log("Component will unmount");
	this.setState({ count: null })
}


------------------


useEffect(() => {
    // Effektfunktionen
    document.title = `You clicked ${count} times`;

    // Återställning av effekten
    return () => {
      document.title = "React App"; // Återställ titeln när komponenten rensas upp
    };
}, [count]); // Beroende: Kör effekten när 'count' förändras


useEffect(() => {
    // Fokusera på knappen när komponenten renderas
    imgRef.current.focus();
}, []);


// USEREF


const enlargeImage = () => {
  imgRef.current.style.width = "200px";
};

const shrinkImage = () => {
  imgRef.current.style.width = "100px";
};

<div style={{ marginBottom: "20px" }}>
  <button onClick={shrinkImage}>Shrink Image</button>
  <button onClick={enlargeImage}>Enlarge Image</button>
</div>

<img
  src="/vite.svg"
  ref={imgRef}
  alt="Vite Logo"
  style={{ width: "100px", transition: "width 0.5s ease" }}
/>